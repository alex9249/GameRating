@model GameRating.Models.Game
@{
    ViewBag.Title = "Home Page";
}


<div class="jumbotron">
    <h1>Games</h1>

</div>


<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Video Game Rating!</title>
    @Scripts.Render("~/bundles/jquery");
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />

    <script src="https://www.google.com/jsapi"
            type="text/javascript"></script>
    <script language="Javascript" type="text/javascript">
        //<!
        google.load('search', '1');


        function OnLoad() {

            // create a tabbed mode search control
            var gameName = document.getElementById("gameName").innerText.toString();
            var tabbed = new google.search.SearchControl();
            tabbed.setResultSetSize(1);

            // create our searchers.  There will now be 3 tabs.
            tabbed.addSearcher(new google.search.ImageSearch());

            tabbed.addSearcher(new google.search.VideoSearch());

            // draw in tabbed layout mode
            var drawOptions = new google.search.DrawOptions();
            drawOptions.setDrawMode(google.search.SearchControl.DRAW_MODE_TABBED);


            // Draw the tabbed view in the content div
            tabbed.draw(document.getElementById("content"), drawOptions);

            // Search!
            tabbed.execute(gameName);

            // tell the searcher to draw itself and tell it where to attach


        }
        google.setOnLoadCallback(OnLoad);
    </script>
</head>
<body style="font-family: Arial;border: 0 none;">
    <div id="content">Loading...</div>
    <div>
        <h4>Game</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                <label id="gameName">@Html.DisplayFor(model => model.Name)</label>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.System)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.System)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Rating)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Rating)
            </dd>
            <dd>
                <input type="button" id="NextButton" value="Next" onclick="location.href='@Url.Action("Next", "Home")'" />
                <input type="button" id="UpvoteButton" name="command" value="Upvote" onclick="location.href='@Url.Action("Upvote", "Home")'" />
                <input type="button" id="DownvoteButton" value="Downvote" onclick="location.href='@Url.Action("Downvote", "Home")'" />
            </dd>

        </dl>
    </div>
    <script>
        $("#NextButton").hover(function () {
            $("#NextButton").fadeToggle(100);
            $(this).css('background-color', 'yellow');
            $("#NextButton").fadeToggle(100);
        }, function () {
            $(this).css('background-color', 'white');
            $("#NextButton").fadeIn();
        });
    </script>
    <script>
        $("#UpvoteButton").hover(function () {
            $(this).fadeToggle(100);
            $(this).css('background-color', 'aqua');
            $(this).fadeToggle(100);
        }, function () {
            $(this).css('background-color', 'white');
            $(this).fadeIn();
        });
    </script>
    <script>
        $("#DownvoteButton").hover(function () {
            $(this).fadeToggle(100);
            $(this).css('background-color', 'red');
            $(this).fadeToggle(100);
        }, function () {
            $(this).css('background-color', 'white');
            $(this).fadeIn();
        });
    </script>
</body>
</html>